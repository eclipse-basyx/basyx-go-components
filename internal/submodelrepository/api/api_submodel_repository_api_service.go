// Code generated by OpenAPI Generator (https://openapi-generator.tech);

/*
 * DotAAS Part 2 | HTTP/REST | Submodel Repository Service Specification
 *
 * The entire Submodel Repository Service Specification as part of the [Specification of the Asset Administration Shell: Part 2](http://industrialdigitaltwin.org/en/content-hub).   Publisher: Industrial Digital Twin Association (IDTA) 2023
 *
 * API version: V3.0.3_SSP-001
 * Contact: info@idtwin.org
 */

package api

import (
	"context"
	"database/sql"
	"encoding/base64"
	"errors"
	"fmt"
	"net/http"
	"os"

	"github.com/eclipse-basyx/basyx-go-components/internal/common"
	gen "github.com/eclipse-basyx/basyx-go-components/internal/common/model"
	persistence "github.com/eclipse-basyx/basyx-go-components/internal/submodelrepository/persistence"
)

// SubmodelRepositoryAPIAPIService is a service that implements the logic for the SubmodelRepositoryAPIAPIServicer
// This service should implement the business logic for every endpoint for the SubmodelRepositoryAPIAPI API.
// Include any external packages or services that will be required by this service.

type SubmodelRepositoryAPIAPIService struct {
	submodelBackend persistence.PostgreSQLSubmodelDatabase
}

// NewSubmodelRepositoryAPIAPIService creates a default api service
func NewSubmodelRepositoryAPIAPIService(databaseBackend persistence.PostgreSQLSubmodelDatabase) *SubmodelRepositoryAPIAPIService {
	return &SubmodelRepositoryAPIAPIService{
		submodelBackend: databaseBackend,
	}
}

// GetAllSubmodels - Returns all Submodels
func (s *SubmodelRepositoryAPIAPIService) GetAllSubmodels(
	ctx context.Context,
	semanticId string,
	idShort string,
	limit int32,
	cursor string,
	level string,
	extent string,
) (gen.ImplResponse, error) {
	sms, nextCursor, err := s.submodelBackend.GetAllSubmodels(limit, cursor, idShort)
	if err != nil {
		return gen.Response(500, nil), err
	}

	// using the openAPI provided response struct to include paging metadata
	res := gen.GetSubmodelsResult{
		PagingMetadata: gen.PagedResultPagingMetadata{
			Cursor: nextCursor,
		},
		Result: sms,
	}
	return gen.Response(200, res), nil
}

// for getSubModel by id
func (s *SubmodelRepositoryAPIAPIService) GetSubmodelById(
	ctx context.Context,
	id string,
	level string,
	extent string,
) (gen.ImplResponse, error) {
	decodedSubmodelIdentifier, decodeErr := base64.RawStdEncoding.DecodeString(id)
	if decodeErr != nil {
		return gen.Response(http.StatusBadRequest, nil), decodeErr
	}
	sm, err := s.submodelBackend.GetSubmodel(string(decodedSubmodelIdentifier))

	if err != nil {

		if errors.Is(err, sql.ErrNoRows) {
			return gen.Response(404, nil), nil
		}
		if common.IsErrNotFound(err) {

			return gen.Response(404, nil), err

		}
		return gen.Response(500, nil), err
	}
	return gen.Response(200, sm), nil
}

// DeleteSubmodelById - Deletes a Submodel by Id
func (s *SubmodelRepositoryAPIAPIService) DeleteSubmodelById(
	ctx context.Context,
	id string,
) (gen.ImplResponse, error) {
	decodedSubmodelIdentifier, decodeErr := base64.RawStdEncoding.DecodeString(id)
	if decodeErr != nil {
		return gen.Response(http.StatusBadRequest, nil), decodeErr
	}
	err := s.submodelBackend.DeleteSubmodel(string(decodedSubmodelIdentifier))
	if err != nil {
		if errors.Is(err, sql.ErrNoRows) {
			return gen.Response(404, nil), nil
		}
		return gen.Response(500, nil), err
	}
	return gen.Response(204, nil), nil
}

// PostSubmodel - Creates a new Submodel
func (s *SubmodelRepositoryAPIAPIService) PostSubmodel(
	ctx context.Context,
	submodel gen.Submodel,
) (gen.ImplResponse, error) {
	err := s.submodelBackend.CreateSubmodel(submodel)
	if err != nil {
		fmt.Println("Error creating submodel: " + err.Error())
		return gen.Response(500, nil), err
	}
	// According to REST convention, return 201 Created + the created resource
	return gen.Response(201, submodel), nil
}

// GetAllSubmodelsMetadata - Returns the metadata attributes of all Submodels
func (s *SubmodelRepositoryAPIAPIService) GetAllSubmodelsMetadata(
	ctx context.Context,
	semanticId string,
	idShort string,
	limit int32,
	cursor string) (gen.ImplResponse, error) {
	sms, nextCursor, err := s.submodelBackend.GetAllSubmodelsMetadata(limit, cursor, idShort, semanticId)
	if err != nil {
		return gen.Response(500, nil), err
	}

	// using the openAPI provided response struct to include paging metadata
	res := gen.GetSubmodelsResult{
		PagingMetadata: gen.PagedResultPagingMetadata{
			Cursor: nextCursor,
		},
		Result: sms,
	}
	return gen.Response(200, res), nil

	// TODO - update GetAllSubmodelsMetadata with the required logic for this service method.
	// Add api_submodel_repository_api_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, GetSubmodelsMetadataResult{}) or use other options such as http.Ok ...
	// return gen.Response(200, GetSubmodelsMetadataResult{}), nil

	// TODO: Uncomment the next line to return response Response(400, Result{}) or use other options such as http.Ok ...
	// return gen.Response(400, Result{}), nil

	// TODO: Uncomment the next line to return response Response(401, Result{}) or use other options such as http.Ok ...
	// return gen.Response(401, Result{}), nil

	// TODO: Uncomment the next line to return response Response(403, Result{}) or use other options such as http.Ok ...
	// return gen.Response(403, Result{}), nil

	// TODO: Uncomment the next line to return response Response(500, Result{}) or use other options such as http.Ok ...
	// return gen.Response(500, Result{}), nil

	// TODO: Uncomment the next line to return response Response(0, Result{}) or use other options such as http.Ok ...
	// return gen.Response(0, Result{}), nil

	return gen.Response(http.StatusNotImplemented, nil), errors.New("GetAllSubmodelsMetadata method not implemented")
}

// GetAllSubmodelsValueOnly - Returns all Submodels in their ValueOnly representation
func (s *SubmodelRepositoryAPIAPIService) GetAllSubmodelsValueOnly(ctx context.Context, semanticId string, idShort string, limit int32, cursor string, level string, extent string) (gen.ImplResponse, error) {
	// TODO - update GetAllSubmodelsValueOnly with the required logic for this service method.
	// Add api_submodel_repository_api_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, GetSubmodelsValueResult{}) or use other options such as http.Ok ...
	// return gen.Response(200, GetSubmodelsValueResult{}), nil

	// TODO: Uncomment the next line to return response Response(400, Result{}) or use other options such as http.Ok ...
	// return gen.Response(400, Result{}), nil

	// TODO: Uncomment the next line to return response Response(401, Result{}) or use other options such as http.Ok ...
	// return gen.Response(401, Result{}), nil

	// TODO: Uncomment the next line to return response Response(403, Result{}) or use other options such as http.Ok ...
	// return gen.Response(403, Result{}), nil

	// TODO: Uncomment the next line to return response Response(404, Result{}) or use other options such as http.Ok ...
	// return gen.Response(404, Result{}), nil

	// TODO: Uncomment the next line to return response Response(500, Result{}) or use other options such as http.Ok ...
	// return gen.Response(500, Result{}), nil

	// TODO: Uncomment the next line to return response Response(0, Result{}) or use other options such as http.Ok ...
	// return gen.Response(0, Result{}), nil

	return gen.Response(http.StatusNotImplemented, nil), errors.New("GetAllSubmodelsValueOnly method not implemented")
}

// GetAllSubmodelsReference - Returns the References for all Submodels
func (s *SubmodelRepositoryAPIAPIService) GetAllSubmodelsReference(ctx context.Context, semanticId string, idShort string, limit int32, cursor string, level string) (gen.ImplResponse, error) {
	// TODO - update GetAllSubmodelsReference with the required logic for this service method.
	// Add api_submodel_repository_api_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, GetReferencesResult{}) or use other options such as http.Ok ...
	// return gen.Response(200, GetReferencesResult{}), nil

	// TODO: Uncomment the next line to return response Response(400, Result{}) or use other options such as http.Ok ...
	// return gen.Response(400, Result{}), nil

	// TODO: Uncomment the next line to return response Response(401, Result{}) or use other options such as http.Ok ...
	// return gen.Response(401, Result{}), nil

	// TODO: Uncomment the next line to return response Response(403, Result{}) or use other options such as http.Ok ...
	// return gen.Response(403, Result{}), nil

	// TODO: Uncomment the next line to return response Response(500, Result{}) or use other options such as http.Ok ...
	// return gen.Response(500, Result{}), nil

	// TODO: Uncomment the next line to return response Response(0, Result{}) or use other options such as http.Ok ...
	// return gen.Response(0, Result{}), nil

	return gen.Response(http.StatusNotImplemented, nil), errors.New("GetAllSubmodelsReference method not implemented")
}

// GetAllSubmodelsPath - Returns all Submodels in the Path notation
func (s *SubmodelRepositoryAPIAPIService) GetAllSubmodelsPath(ctx context.Context, semanticId string, idShort string, limit int32, cursor string, level string) (gen.ImplResponse, error) {
	// TODO - update GetAllSubmodelsPath with the required logic for this service method.
	// Add api_submodel_repository_api_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, GetPathItemsResult{}) or use other options such as http.Ok ...
	// return gen.Response(200, GetPathItemsResult{}), nil

	// TODO: Uncomment the next line to return response Response(400, Result{}) or use other options such as http.Ok ...
	// return gen.Response(400, Result{}), nil

	// TODO: Uncomment the next line to return response Response(401, Result{}) or use other options such as http.Ok ...
	// return gen.Response(401, Result{}), nil

	// TODO: Uncomment the next line to return response Response(403, Result{}) or use other options such as http.Ok ...
	// return gen.Response(403, Result{}), nil

	// TODO: Uncomment the next line to return response Response(500, Result{}) or use other options such as http.Ok ...
	// return gen.Response(500, Result{}), nil

	// TODO: Uncomment the next line to return response Response(0, Result{}) or use other options such as http.Ok ...
	// return gen.Response(0, Result{}), nil

	return gen.Response(http.StatusNotImplemented, nil), errors.New("GetAllSubmodelsPath method not implemented")
}

// GetSubmodelById - Returns a specific Submodel
// func (s *SubmodelRepositoryAPIAPIService) GetSubmodelById(ctx context.Context, submodelIdentifier string, level string, extent string) (gen.ImplResponse, error) {
// TODO - update GetSubmodelById with the required logic for this service method.
// Add api_submodel_repository_api_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

// TODO: Uncomment the next line to return response Response(200, Submodel{}) or use other options such as http.Ok ...
// return gen.Response(200, Submodel{}), nil

// TODO: Uncomment the next line to return response Response(400, Result{}) or use other options such as http.Ok ...
// return gen.Response(400, Result{}), nil

// TODO: Uncomment the next line to return response Response(401, Result{}) or use other options such as http.Ok ...
// return gen.Response(401, Result{}), nil

// TODO: Uncomment the next line to return response Response(403, Result{}) or use other options such as http.Ok ...
// return gen.Response(403, Result{}), nil

// TODO: Uncomment the next line to return response Response(404, Result{}) or use other options such as http.Ok ...
// return gen.Response(404, Result{}), nil

// TODO: Uncomment the next line to return response Response(500, Result{}) or use other options such as http.Ok ...
// return gen.Response(500, Result{}), nil

// TODO: Uncomment the next line to return response Response(0, Result{}) or use other options such as http.Ok ...
// return gen.Response(0, Result{}), nil

// return gen.Response(http.StatusNotImplemented, nil), errors.New("GetSubmodelById method not implemented")
// }

// PutSubmodelById - Updates an existing Submodel
func (s *SubmodelRepositoryAPIAPIService) PutSubmodelById(ctx context.Context, submodelIdentifier string, submodel gen.Submodel) (gen.ImplResponse, error) {
	// TODO - update PutSubmodelById with the required logic for this service method.
	// Add api_submodel_repository_api_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(204, {}) or use other options such as http.Ok ...
	// return gen.Response(204, nil),nil

	// TODO: Uncomment the next line to return response Response(400, Result{}) or use other options such as http.Ok ...
	// return gen.Response(400, Result{}), nil

	// TODO: Uncomment the next line to return response Response(401, Result{}) or use other options such as http.Ok ...
	// return gen.Response(401, Result{}), nil

	// TODO: Uncomment the next line to return response Response(403, Result{}) or use other options such as http.Ok ...
	// return gen.Response(403, Result{}), nil

	// TODO: Uncomment the next line to return response Response(404, Result{}) or use other options such as http.Ok ...
	// return gen.Response(404, Result{}), nil

	// TODO: Uncomment the next line to return response Response(500, Result{}) or use other options such as http.Ok ...
	// return gen.Response(500, Result{}), nil

	// TODO: Uncomment the next line to return response Response(0, Result{}) or use other options such as http.Ok ...
	// return gen.Response(0, Result{}), nil

	return gen.Response(http.StatusNotImplemented, nil), errors.New("PutSubmodelById method not implemented")
}

// PatchSubmodelById - Updates an existing Submodel
func (s *SubmodelRepositoryAPIAPIService) PatchSubmodelById(ctx context.Context, submodelIdentifier string, submodel gen.Submodel, level string) (gen.ImplResponse, error) {
	// TODO - update PatchSubmodelById with the required logic for this service method.
	// Add api_submodel_repository_api_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(204, {}) or use other options such as http.Ok ...
	// return gen.Response(204, nil),nil

	// TODO: Uncomment the next line to return response Response(400, Result{}) or use other options such as http.Ok ...
	// return gen.Response(400, Result{}), nil

	// TODO: Uncomment the next line to return response Response(401, Result{}) or use other options such as http.Ok ...
	// return gen.Response(401, Result{}), nil

	// TODO: Uncomment the next line to return response Response(403, Result{}) or use other options such as http.Ok ...
	// return gen.Response(403, Result{}), nil

	// TODO: Uncomment the next line to return response Response(404, Result{}) or use other options such as http.Ok ...
	// return gen.Response(404, Result{}), nil

	// TODO: Uncomment the next line to return response Response(500, Result{}) or use other options such as http.Ok ...
	// return gen.Response(500, Result{}), nil

	// TODO: Uncomment the next line to return response Response(0, Result{}) or use other options such as http.Ok ...
	// return gen.Response(0, Result{}), nil

	return gen.Response(http.StatusNotImplemented, nil), errors.New("PatchSubmodelById method not implemented")
}

// GetSubmodelByIdMetadata - Returns the metadata attributes of a specific Submodel
func (s *SubmodelRepositoryAPIAPIService) GetSubmodelByIdMetadata(ctx context.Context, submodelIdentifier string) (gen.ImplResponse, error) {
	// TODO - update GetSubmodelByIdMetadata with the required logic for this service method.
	// Add api_submodel_repository_api_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, SubmodelMetadata{}) or use other options such as http.Ok ...
	// return gen.Response(200, SubmodelMetadata{}), nil

	// TODO: Uncomment the next line to return response Response(400, Result{}) or use other options such as http.Ok ...
	// return gen.Response(400, Result{}), nil

	// TODO: Uncomment the next line to return response Response(401, Result{}) or use other options such as http.Ok ...
	// return gen.Response(401, Result{}), nil

	// TODO: Uncomment the next line to return response Response(403, Result{}) or use other options such as http.Ok ...
	// return gen.Response(403, Result{}), nil

	// TODO: Uncomment the next line to return response Response(404, Result{}) or use other options such as http.Ok ...
	// return gen.Response(404, Result{}), nil

	// TODO: Uncomment the next line to return response Response(500, Result{}) or use other options such as http.Ok ...
	// return gen.Response(500, Result{}), nil

	// TODO: Uncomment the next line to return response Response(0, Result{}) or use other options such as http.Ok ...
	// return gen.Response(0, Result{}), nil

	return gen.Response(http.StatusNotImplemented, nil), errors.New("GetSubmodelByIdMetadata method not implemented")
}

// PatchSubmodelByIdMetadata - Updates the metadata attributes of an existing Submodel
func (s *SubmodelRepositoryAPIAPIService) PatchSubmodelByIdMetadata(ctx context.Context, submodelIdentifier string, submodelMetadata gen.SubmodelMetadata) (gen.ImplResponse, error) {
	// TODO - update PatchSubmodelByIdMetadata with the required logic for this service method.
	// Add api_submodel_repository_api_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(204, {}) or use other options such as http.Ok ...
	// return gen.Response(204, nil),nil

	// TODO: Uncomment the next line to return response Response(400, Result{}) or use other options such as http.Ok ...
	// return gen.Response(400, Result{}), nil

	// TODO: Uncomment the next line to return response Response(401, Result{}) or use other options such as http.Ok ...
	// return gen.Response(401, Result{}), nil

	// TODO: Uncomment the next line to return response Response(403, Result{}) or use other options such as http.Ok ...
	// return gen.Response(403, Result{}), nil

	// TODO: Uncomment the next line to return response Response(404, Result{}) or use other options such as http.Ok ...
	// return gen.Response(404, Result{}), nil

	// TODO: Uncomment the next line to return response Response(500, Result{}) or use other options such as http.Ok ...
	// return gen.Response(500, Result{}), nil

	// TODO: Uncomment the next line to return response Response(0, Result{}) or use other options such as http.Ok ...
	// return gen.Response(0, Result{}), nil

	return gen.Response(http.StatusNotImplemented, nil), errors.New("PatchSubmodelByIdMetadata method not implemented")
}

// GetSubmodelByIdValueOnly - Returns a specific Submodel in the ValueOnly representation
func (s *SubmodelRepositoryAPIAPIService) GetSubmodelByIdValueOnly(ctx context.Context, submodelIdentifier string, level string, extent string) (gen.ImplResponse, error) {
	// TODO - update GetSubmodelByIdValueOnly with the required logic for this service method.
	// Add api_submodel_repository_api_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, map[string]interface{}{}) or use other options such as http.Ok ...
	// return gen.Response(200, map[string]interface{}{}), nil

	// TODO: Uncomment the next line to return response Response(400, Result{}) or use other options such as http.Ok ...
	// return gen.Response(400, Result{}), nil

	// TODO: Uncomment the next line to return response Response(401, Result{}) or use other options such as http.Ok ...
	// return gen.Response(401, Result{}), nil

	// TODO: Uncomment the next line to return response Response(403, Result{}) or use other options such as http.Ok ...
	// return gen.Response(403, Result{}), nil

	// TODO: Uncomment the next line to return response Response(404, Result{}) or use other options such as http.Ok ...
	// return gen.Response(404, Result{}), nil

	// TODO: Uncomment the next line to return response Response(500, Result{}) or use other options such as http.Ok ...
	// return gen.Response(500, Result{}), nil

	// TODO: Uncomment the next line to return response Response(0, Result{}) or use other options such as http.Ok ...
	// return gen.Response(0, Result{}), nil

	return gen.Response(http.StatusNotImplemented, nil), errors.New("GetSubmodelByIdValueOnly method not implemented")
}

// PatchSubmodelByIdValueOnly - Updates the values of an existing Submodel
func (s *SubmodelRepositoryAPIAPIService) PatchSubmodelByIdValueOnly(ctx context.Context, submodelIdentifier string, body map[string]interface{}, level string) (gen.ImplResponse, error) {
	// TODO - update PatchSubmodelByIdValueOnly with the required logic for this service method.
	// Add api_submodel_repository_api_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(204, {}) or use other options such as http.Ok ...
	// return gen.Response(204, nil),nil

	// TODO: Uncomment the next line to return response Response(400, Result{}) or use other options such as http.Ok ...
	// return gen.Response(400, Result{}), nil

	// TODO: Uncomment the next line to return response Response(401, Result{}) or use other options such as http.Ok ...
	// return gen.Response(401, Result{}), nil

	// TODO: Uncomment the next line to return response Response(403, Result{}) or use other options such as http.Ok ...
	// return gen.Response(403, Result{}), nil

	// TODO: Uncomment the next line to return response Response(404, Result{}) or use other options such as http.Ok ...
	// return gen.Response(404, Result{}), nil

	// TODO: Uncomment the next line to return response Response(500, Result{}) or use other options such as http.Ok ...
	// return gen.Response(500, Result{}), nil

	// TODO: Uncomment the next line to return response Response(0, Result{}) or use other options such as http.Ok ...
	// return gen.Response(0, Result{}), nil

	return gen.Response(http.StatusNotImplemented, nil), errors.New("PatchSubmodelByIdValueOnly method not implemented")
}

// GetSubmodelByIdReference - Returns the Reference of a specific Submodel
func (s *SubmodelRepositoryAPIAPIService) GetSubmodelByIdReference(ctx context.Context, submodelIdentifier string) (gen.ImplResponse, error) {
	// TODO - update GetSubmodelByIdReference with the required logic for this service method.
	// Add api_submodel_repository_api_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, Reference{}) or use other options such as http.Ok ...
	// return gen.Response(200, Reference{}), nil

	// TODO: Uncomment the next line to return response Response(400, Result{}) or use other options such as http.Ok ...
	// return gen.Response(400, Result{}), nil

	// TODO: Uncomment the next line to return response Response(401, Result{}) or use other options such as http.Ok ...
	// return gen.Response(401, Result{}), nil

	// TODO: Uncomment the next line to return response Response(403, Result{}) or use other options such as http.Ok ...
	// return gen.Response(403, Result{}), nil

	// TODO: Uncomment the next line to return response Response(404, Result{}) or use other options such as http.Ok ...
	// return gen.Response(404, Result{}), nil

	// TODO: Uncomment the next line to return response Response(500, Result{}) or use other options such as http.Ok ...
	// return gen.Response(500, Result{}), nil

	// TODO: Uncomment the next line to return response Response(0, Result{}) or use other options such as http.Ok ...
	// return gen.Response(0, Result{}), nil

	return gen.Response(http.StatusNotImplemented, nil), errors.New("GetSubmodelByIdReference method not implemented")
}

// GetSubmodelByIdPath - Returns a specific Submodel in the Path notation
func (s *SubmodelRepositoryAPIAPIService) GetSubmodelByIdPath(ctx context.Context, submodelIdentifier string, level string) (gen.ImplResponse, error) {
	// TODO - update GetSubmodelByIdPath with the required logic for this service method.
	// Add api_submodel_repository_api_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, []string{}) or use other options such as http.Ok ...
	// return gen.Response(200, []string{}), nil

	// TODO: Uncomment the next line to return response Response(400, Result{}) or use other options such as http.Ok ...
	// return gen.Response(400, Result{}), nil

	// TODO: Uncomment the next line to return response Response(401, Result{}) or use other options such as http.Ok ...
	// return gen.Response(401, Result{}), nil

	// TODO: Uncomment the next line to return response Response(403, Result{}) or use other options such as http.Ok ...
	// return gen.Response(403, Result{}), nil

	// TODO: Uncomment the next line to return response Response(404, Result{}) or use other options such as http.Ok ...
	// return gen.Response(404, Result{}), nil

	// TODO: Uncomment the next line to return response Response(500, Result{}) or use other options such as http.Ok ...
	// return gen.Response(500, Result{}), nil

	// TODO: Uncomment the next line to return response Response(0, Result{}) or use other options such as http.Ok ...
	// return gen.Response(0, Result{}), nil

	return gen.Response(http.StatusNotImplemented, nil), errors.New("GetSubmodelByIdPath method not implemented")
}

// GetAllSubmodelElements - Returns all submodel elements including their hierarchy
func (s *SubmodelRepositoryAPIAPIService) GetAllSubmodelElements(ctx context.Context, submodelIdentifier string, limit int32, cursor string, level string, extent string) (gen.ImplResponse, error) {
	// TODO: Authorization logic to be implemented
	// return gen.Response(401, Result{}), nil
	// return gen.Response(403, Result{}), nil

	decodedSubmodelIdentifier, decodeErr := base64.RawStdEncoding.DecodeString(submodelIdentifier)
	if decodeErr != nil {
		return gen.Response(http.StatusBadRequest, nil), decodeErr
	}

	sme, cursor, err := s.submodelBackend.GetSubmodelElements(string(decodedSubmodelIdentifier), int(limit), cursor)
	if err != nil {
		if common.IsErrNotFound(err) {
			timestamp := common.GetCurrentTimestamp()
			return gen.Response(http.StatusNotFound, []common.ErrorHandler{*common.NewErrorHandler("Error", err, "404", "SMREPO-GetAllSubmodelElements-404-NotFound", string(timestamp))}), nil
		}
		if common.IsErrBadRequest(err) {
			timestamp := common.GetCurrentTimestamp()
			return gen.Response(http.StatusBadRequest, []common.ErrorHandler{*common.NewErrorHandler("Error", err, "400", "SMREPO-GetAllSubmodelElements-400-BadRequest", string(timestamp))}), nil
		}
		if common.IsInternalServerError(err) {
			timestamp := common.GetCurrentTimestamp()
			return gen.Response(http.StatusInternalServerError, []common.ErrorHandler{*common.NewErrorHandler("Error", err, "500", "SMREPO-GetAllSubmodelElements-500-InternalServerError", string(timestamp))}), nil
		}
		if common.IsErrBadRequest(err) {
			timestamp := common.GetCurrentTimestamp()
			return gen.Response(http.StatusBadRequest, []common.ErrorHandler{*common.NewErrorHandler("Error", err, "400", "SMREPO-GetAllSubmodelElements-400-BadRequest", string(timestamp))}), nil
		}
		return gen.Response(http.StatusInternalServerError, nil), err
	}
	res := gen.GetSubmodelElementsResult{
		PagingMetadata: gen.PagedResultPagingMetadata{
			Cursor: cursor,
		},
		Result: sme,
	}

	return gen.Response(http.StatusOK, res), nil
}

// PostSubmodelElementSubmodelRepo - Creates a new submodel element
func (s *SubmodelRepositoryAPIAPIService) PostSubmodelElementSubmodelRepo(ctx context.Context, submodelIdentifier string, submodelElement gen.SubmodelElement) (gen.ImplResponse, error) {
	// TODO: Authorization logic to be implemented
	// return gen.Response(401, Result{}), nil
	// return gen.Response(403, Result{}), nil

	decodedSubmodelIdentifier, decodeErr := base64.RawStdEncoding.DecodeString(submodelIdentifier)
	if decodeErr != nil {
		return gen.Response(http.StatusBadRequest, nil), decodeErr
	}

	if err := s.submodelBackend.AddSubmodelElement(string(decodedSubmodelIdentifier), submodelElement); err != nil {
		if common.IsErrNotFound(err) {
			timestamp := common.GetCurrentTimestamp()
			return gen.Response(http.StatusNotFound, []common.ErrorHandler{*common.NewErrorHandler("Error", err, "404", "SMREPO-PostSubmodelElementSubmodelRepo-404-NotFound", string(timestamp))}), nil
		}
		if common.IsErrConflict(err) {
			timestamp := common.GetCurrentTimestamp()
			return gen.Response(http.StatusConflict, []common.ErrorHandler{*common.NewErrorHandler("Error", err, "409", "SMREPO-PostSubmodelElementSubmodelRepo-409-Conflict", string(timestamp))}), nil
		}
		if common.IsErrBadRequest(err) {
			timestamp := common.GetCurrentTimestamp()
			return gen.Response(http.StatusBadRequest, []common.ErrorHandler{*common.NewErrorHandler("Error", err, "400", "SMREPO-PostSubmodelElementSubmodelRepo-400-BadRequest", string(timestamp))}), nil
		}
		if common.IsInternalServerError(err) {
			timestamp := common.GetCurrentTimestamp()
			return gen.Response(http.StatusInternalServerError, []common.ErrorHandler{*common.NewErrorHandler("Error", err, "500", "SMREPO-PostSubmodelElementSubmodelRepo-500-InternalServerError", string(timestamp))}), nil
		}
		return gen.Response(http.StatusInternalServerError, nil), err
	}

	return gen.Response(http.StatusCreated, submodelElement), nil
}

// GetAllSubmodelElementsMetadataSubmodelRepo - Returns the metadata attributes of all submodel elements including their hierarchy
func (s *SubmodelRepositoryAPIAPIService) GetAllSubmodelElementsMetadataSubmodelRepo(ctx context.Context, submodelIdentifier string, limit int32, cursor string) (gen.ImplResponse, error) {
	// TODO - update GetAllSubmodelElementsMetadataSubmodelRepo with the required logic for this service method.
	// Add api_submodel_repository_api_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, GetSubmodelElementsMetadataResult{}) or use other options such as http.Ok ...
	// return gen.Response(200, GetSubmodelElementsMetadataResult{}), nil

	// TODO: Uncomment the next line to return response Response(400, Result{}) or use other options such as http.Ok ...
	// return gen.Response(400, Result{}), nil

	// TODO: Uncomment the next line to return response Response(401, Result{}) or use other options such as http.Ok ...
	// return gen.Response(401, Result{}), nil

	// TODO: Uncomment the next line to return response Response(403, Result{}) or use other options such as http.Ok ...
	// return gen.Response(403, Result{}), nil

	// TODO: Uncomment the next line to return response Response(404, Result{}) or use other options such as http.Ok ...
	// return gen.Response(404, Result{}), nil

	// TODO: Uncomment the next line to return response Response(500, Result{}) or use other options such as http.Ok ...
	// return gen.Response(500, Result{}), nil

	// TODO: Uncomment the next line to return response Response(0, Result{}) or use other options such as http.Ok ...
	// return gen.Response(0, Result{}), nil

	return gen.Response(http.StatusNotImplemented, nil), errors.New("GetAllSubmodelElementsMetadataSubmodelRepo method not implemented")
}

// GetAllSubmodelElementsValueOnlySubmodelRepo - Returns all submodel elements including their hierarchy in the ValueOnly representation
func (s *SubmodelRepositoryAPIAPIService) GetAllSubmodelElementsValueOnlySubmodelRepo(ctx context.Context, submodelIdentifier string, limit int32, cursor string, level string, extent string) (gen.ImplResponse, error) {
	// TODO - update GetAllSubmodelElementsValueOnlySubmodelRepo with the required logic for this service method.
	// Add api_submodel_repository_api_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, GetSubmodelElementsValueResult{}) or use other options such as http.Ok ...
	// return gen.Response(200, GetSubmodelElementsValueResult{}), nil

	// TODO: Uncomment the next line to return response Response(400, Result{}) or use other options such as http.Ok ...
	// return gen.Response(400, Result{}), nil

	// TODO: Uncomment the next line to return response Response(401, Result{}) or use other options such as http.Ok ...
	// return gen.Response(401, Result{}), nil

	// TODO: Uncomment the next line to return response Response(403, Result{}) or use other options such as http.Ok ...
	// return gen.Response(403, Result{}), nil

	// TODO: Uncomment the next line to return response Response(404, Result{}) or use other options such as http.Ok ...
	// return gen.Response(404, Result{}), nil

	// TODO: Uncomment the next line to return response Response(500, Result{}) or use other options such as http.Ok ...
	// return gen.Response(500, Result{}), nil

	// TODO: Uncomment the next line to return response Response(0, Result{}) or use other options such as http.Ok ...
	// return gen.Response(0, Result{}), nil

	return gen.Response(http.StatusNotImplemented, nil), errors.New("GetAllSubmodelElementsValueOnlySubmodelRepo method not implemented")
}

// GetAllSubmodelElementsReferenceSubmodelRepo - Returns the References of all submodel elements
func (s *SubmodelRepositoryAPIAPIService) GetAllSubmodelElementsReferenceSubmodelRepo(ctx context.Context, submodelIdentifier string, limit int32, cursor string, level string) (gen.ImplResponse, error) {
	// TODO - update GetAllSubmodelElementsReferenceSubmodelRepo with the required logic for this service method.
	// Add api_submodel_repository_api_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, GetReferencesResult{}) or use other options such as http.Ok ...
	// return gen.Response(200, GetReferencesResult{}), nil

	// TODO: Uncomment the next line to return response Response(400, Result{}) or use other options such as http.Ok ...
	// return gen.Response(400, Result{}), nil

	// TODO: Uncomment the next line to return response Response(401, Result{}) or use other options such as http.Ok ...
	// return gen.Response(401, Result{}), nil

	// TODO: Uncomment the next line to return response Response(403, Result{}) or use other options such as http.Ok ...
	// return gen.Response(403, Result{}), nil

	// TODO: Uncomment the next line to return response Response(404, Result{}) or use other options such as http.Ok ...
	// return gen.Response(404, Result{}), nil

	// TODO: Uncomment the next line to return response Response(500, Result{}) or use other options such as http.Ok ...
	// return gen.Response(500, Result{}), nil

	// TODO: Uncomment the next line to return response Response(0, Result{}) or use other options such as http.Ok ...
	// return gen.Response(0, Result{}), nil

	return gen.Response(http.StatusNotImplemented, nil), errors.New("GetAllSubmodelElementsReferenceSubmodelRepo method not implemented")
}

// GetAllSubmodelElementsPathSubmodelRepo - Returns all submodel elements including their hierarchy in the Path notation
func (s *SubmodelRepositoryAPIAPIService) GetAllSubmodelElementsPathSubmodelRepo(ctx context.Context, submodelIdentifier string, limit int32, cursor string, level string) (gen.ImplResponse, error) {
	// TODO - update GetAllSubmodelElementsPathSubmodelRepo with the required logic for this service method.
	// Add api_submodel_repository_api_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, GetPathItemsResult{}) or use other options such as http.Ok ...
	// return gen.Response(200, GetPathItemsResult{}), nil

	// TODO: Uncomment the next line to return response Response(400, Result{}) or use other options such as http.Ok ...
	// return gen.Response(400, Result{}), nil

	// TODO: Uncomment the next line to return response Response(401, Result{}) or use other options such as http.Ok ...
	// return gen.Response(401, Result{}), nil

	// TODO: Uncomment the next line to return response Response(403, Result{}) or use other options such as http.Ok ...
	// return gen.Response(403, Result{}), nil

	// TODO: Uncomment the next line to return response Response(404, Result{}) or use other options such as http.Ok ...
	// return gen.Response(404, Result{}), nil

	// TODO: Uncomment the next line to return response Response(500, Result{}) or use other options such as http.Ok ...
	// return gen.Response(500, Result{}), nil

	// TODO: Uncomment the next line to return response Response(0, Result{}) or use other options such as http.Ok ...
	// return gen.Response(0, Result{}), nil

	return gen.Response(http.StatusNotImplemented, nil), errors.New("GetAllSubmodelElementsPathSubmodelRepo method not implemented")
}

// GetSubmodelElementByPathSubmodelRepo - Returns a specific submodel element from the Submodel at a specified path
func (s *SubmodelRepositoryAPIAPIService) GetSubmodelElementByPathSubmodelRepo(ctx context.Context, submodelIdentifier string, idShortPath string, level string, extent string) (gen.ImplResponse, error) {
	// TODO - update GetSubmodelElementByPathSubmodelRepo with the required logic for this service method.
	// Add api_submodel_repository_api_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, SubmodelElement{}) or use other options such as http.Ok ...
	// return gen.Response(200, SubmodelElement{}), nil

	// TODO: Uncomment the next line to return response Response(400, Result{}) or use other options such as http.Ok ...
	// return gen.Response(400, Result{}), nil

	// TODO: Uncomment the next line to return response Response(401, Result{}) or use other options such as http.Ok ...
	// return gen.Response(401, Result{}), nil

	// TODO: Uncomment the next line to return response Response(403, Result{}) or use other options such as http.Ok ...
	// return gen.Response(403, Result{}), nil

	// TODO: Uncomment the next line to return response Response(404, Result{}) or use other options such as http.Ok ...
	// return gen.Response(404, Result{}), nil

	// TODO: Uncomment the next line to return response Response(500, Result{}) or use other options such as http.Ok ...
	// return gen.Response(500, Result{}), nil

	// TODO: Uncomment the next line to return response Response(0, Result{}) or use other options such as http.Ok ...
	// return gen.Response(0, Result{}), nil

	decodedSubmodelIdentifier, decodeErr := base64.RawStdEncoding.DecodeString(submodelIdentifier)
	if decodeErr != nil {
		return gen.Response(http.StatusBadRequest, nil), decodeErr
	}

	sme, err := s.submodelBackend.GetSubmodelElement(string(decodedSubmodelIdentifier), idShortPath, 1, "")
	if err != nil {
		if common.IsErrNotFound(err) {
			timestamp := common.GetCurrentTimestamp()
			return gen.Response(http.StatusNotFound, []common.ErrorHandler{*common.NewErrorHandler("Error", err, "404", "SMREPO-GetSubmodelElementByPathSubmodelRepo-404-NotFound", string(timestamp))}), nil
		}
		if common.IsErrBadRequest(err) {
			timestamp := common.GetCurrentTimestamp()
			return gen.Response(http.StatusBadRequest, []common.ErrorHandler{*common.NewErrorHandler("Error", err, "400", "SMREPO-GetSubmodelElementByPathSubmodelRepo-400-BadRequest", string(timestamp))}), nil
		}
		if common.IsInternalServerError(err) {
			timestamp := common.GetCurrentTimestamp()
			return gen.Response(http.StatusInternalServerError, []common.ErrorHandler{*common.NewErrorHandler("Error", err, "500", "SMREPO-GetSubmodelElementByPathSubmodelRepo-500-InternalServerError", string(timestamp))}), nil
		}
		if common.IsErrBadRequest(err) {
			timestamp := common.GetCurrentTimestamp()
			return gen.Response(http.StatusBadRequest, []common.ErrorHandler{*common.NewErrorHandler("Error", err, "400", "SMREPO-GetSubmodelElementByPathSubmodelRepo-400-BadRequest", string(timestamp))}), nil
		}
		return gen.Response(http.StatusInternalServerError, nil), err
	}

	return gen.Response(http.StatusOK, sme), nil
}

// PutSubmodelElementByPathSubmodelRepo - Updates an existing submodel element at a specified path within submodel elements hierarchy
func (s *SubmodelRepositoryAPIAPIService) PutSubmodelElementByPathSubmodelRepo(ctx context.Context, submodelIdentifier string, idShortPath string, submodelElement gen.SubmodelElement, level string) (gen.ImplResponse, error) {
	// TODO - update PutSubmodelElementByPathSubmodelRepo with the required logic for this service method.
	// Add api_submodel_repository_api_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(204, {}) or use other options such as http.Ok ...
	// return gen.Response(204, nil),nil

	// TODO: Uncomment the next line to return response Response(400, Result{}) or use other options such as http.Ok ...
	// return gen.Response(400, Result{}), nil

	// TODO: Uncomment the next line to return response Response(401, Result{}) or use other options such as http.Ok ...
	// return gen.Response(401, Result{}), nil

	// TODO: Uncomment the next line to return response Response(403, Result{}) or use other options such as http.Ok ...
	// return gen.Response(403, Result{}), nil

	// TODO: Uncomment the next line to return response Response(404, Result{}) or use other options such as http.Ok ...
	// return gen.Response(404, Result{}), nil

	// TODO: Uncomment the next line to return response Response(500, Result{}) or use other options such as http.Ok ...
	// return gen.Response(500, Result{}), nil

	// TODO: Uncomment the next line to return response Response(0, Result{}) or use other options such as http.Ok ...
	// return gen.Response(0, Result{}), nil

	return gen.Response(http.StatusNotImplemented, nil), errors.New("PutSubmodelElementByPathSubmodelRepo method not implemented")
}

// PostSubmodelElementByPathSubmodelRepo - Creates a new submodel element at a specified path within submodel elements hierarchy
func (s *SubmodelRepositoryAPIAPIService) PostSubmodelElementByPathSubmodelRepo(ctx context.Context, submodelIdentifier string, idShortPath string, submodelElement gen.SubmodelElement) (gen.ImplResponse, error) {
	// TODO: Uncomment the next line to return response Response(401, Result{}) or use other options such as http.Ok ...
	// return gen.Response(401, Result{}), nil
	// TODO: Uncomment the next line to return response Response(403, Result{}) or use other options such as http.Ok ...
	// return gen.Response(403, Result{}), nil

	decodedSubmodelIdentifier, decodeErr := base64.RawStdEncoding.DecodeString(submodelIdentifier)
	if decodeErr != nil {
		return gen.Response(http.StatusBadRequest, nil), decodeErr
	}

	if err := s.submodelBackend.AddSubmodelElementWithPath(string(decodedSubmodelIdentifier), idShortPath, submodelElement); err != nil {
		if common.IsErrNotFound(err) {
			timestamp := common.GetCurrentTimestamp()
			return gen.Response(http.StatusNotFound, []common.ErrorHandler{*common.NewErrorHandler("Error", err, "404", "SMREPO-PostSubmodelElementByPathSubmodelRepo-404-NotFound", string(timestamp))}), nil
		}
		if common.IsErrConflict(err) {
			timestamp := common.GetCurrentTimestamp()
			return gen.Response(http.StatusConflict, []common.ErrorHandler{*common.NewErrorHandler("Error", err, "409", "SMREPO-PostSubmodelElementByPathSubmodelRepo-409-Conflict", string(timestamp))}), nil
		}
		if common.IsErrBadRequest(err) {
			timestamp := common.GetCurrentTimestamp()
			return gen.Response(http.StatusBadRequest, []common.ErrorHandler{*common.NewErrorHandler("Error", err, "400", "SMREPO-PostSubmodelElementByPathSubmodelRepo-400-BadRequest", string(timestamp))}), nil
		}
		if common.IsInternalServerError(err) {
			timestamp := common.GetCurrentTimestamp()
			return gen.Response(http.StatusInternalServerError, []common.ErrorHandler{*common.NewErrorHandler("Error", err, "500", "SMREPO-PostSubmodelElementByPathSubmodelRepo-500-InternalServerError", string(timestamp))}), nil
		}
		return gen.Response(http.StatusInternalServerError, nil), err
	}

	return gen.Response(http.StatusCreated, submodelElement), nil
}

// DeleteSubmodelElementByPathSubmodelRepo - Deletes a submodel element at a specified path within the submodel elements hierarchy
func (s *SubmodelRepositoryAPIAPIService) DeleteSubmodelElementByPathSubmodelRepo(ctx context.Context, submodelIdentifier string, idShortPath string) (gen.ImplResponse, error) {
	// TODO: Uncomment the next line to return response Response(401, Result{}) or use other options such as http.Ok ...
	// return gen.Response(401, Result{}), nil

	// TODO: Uncomment the next line to return response Response(403, Result{}) or use other options such as http.Ok ...
	// return gen.Response(403, Result{}), nil

	decodedSubmodelIdentifier, decodeErr := base64.RawStdEncoding.DecodeString(submodelIdentifier)
	if decodeErr != nil {
		return gen.Response(http.StatusBadRequest, nil), decodeErr
	}

	if err := s.submodelBackend.DeleteSubmodelElementByPath(string(decodedSubmodelIdentifier), idShortPath); err != nil {
		if common.IsErrNotFound(err) {
			timestamp := common.GetCurrentTimestamp()
			return gen.Response(http.StatusNotFound, []common.ErrorHandler{*common.NewErrorHandler("Error", err, "404", "SMREPO-DeleteSubmodelElementByPathSubmodelRepo-404-NotFound", string(timestamp))}), nil
		}
		if common.IsErrBadRequest(err) {
			timestamp := common.GetCurrentTimestamp()
			return gen.Response(http.StatusBadRequest, []common.ErrorHandler{*common.NewErrorHandler("Error", err, "400", "SMREPO-DeleteSubmodelElementByPathSubmodelRepo-400-BadRequest", string(timestamp))}), nil
		}
		if common.IsInternalServerError(err) {
			timestamp := common.GetCurrentTimestamp()
			return gen.Response(http.StatusInternalServerError, []common.ErrorHandler{*common.NewErrorHandler("Error", err, "500", "SMREPO-DeleteSubmodelElementByPathSubmodelRepo-500-InternalServerError", string(timestamp))}), nil
		}
		if common.IsErrBadRequest(err) {
			timestamp := common.GetCurrentTimestamp()
			return gen.Response(http.StatusBadRequest, []common.ErrorHandler{*common.NewErrorHandler("Error", err, "400", "SMREPO-DeleteSubmodelElementByPathSubmodelRepo-400-BadRequest", string(timestamp))}), nil
		}
		return gen.Response(http.StatusInternalServerError, nil), err
	}

	return gen.Response(http.StatusNoContent, nil), nil
}

// PatchSubmodelElementByPathSubmodelRepo - Updates an existing SubmodelElement
func (s *SubmodelRepositoryAPIAPIService) PatchSubmodelElementByPathSubmodelRepo(ctx context.Context, submodelIdentifier string, idShortPath string, submodelElement gen.SubmodelElement, level string) (gen.ImplResponse, error) {
	// TODO - update PatchSubmodelElementByPathSubmodelRepo with the required logic for this service method.
	// Add api_submodel_repository_api_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(204, {}) or use other options such as http.Ok ...
	// return gen.Response(204, nil),nil

	// TODO: Uncomment the next line to return response Response(400, Result{}) or use other options such as http.Ok ...
	// return gen.Response(400, Result{}), nil

	// TODO: Uncomment the next line to return response Response(401, Result{}) or use other options such as http.Ok ...
	// return gen.Response(401, Result{}), nil

	// TODO: Uncomment the next line to return response Response(403, Result{}) or use other options such as http.Ok ...
	// return gen.Response(403, Result{}), nil

	// TODO: Uncomment the next line to return response Response(404, Result{}) or use other options such as http.Ok ...
	// return gen.Response(404, Result{}), nil

	// TODO: Uncomment the next line to return response Response(500, Result{}) or use other options such as http.Ok ...
	// return gen.Response(500, Result{}), nil

	// TODO: Uncomment the next line to return response Response(0, Result{}) or use other options such as http.Ok ...
	// return gen.Response(0, Result{}), nil

	return gen.Response(http.StatusNotImplemented, nil), errors.New("PatchSubmodelElementByPathSubmodelRepo method not implemented")
}

// GetSubmodelElementByPathMetadataSubmodelRepo - Returns the matadata attributes of a specific submodel element from the Submodel at a specified path
func (s *SubmodelRepositoryAPIAPIService) GetSubmodelElementByPathMetadataSubmodelRepo(ctx context.Context, submodelIdentifier string, idShortPath string) (gen.ImplResponse, error) {
	// TODO - update GetSubmodelElementByPathMetadataSubmodelRepo with the required logic for this service method.
	// Add api_submodel_repository_api_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, SubmodelElementMetadata{}) or use other options such as http.Ok ...
	// return gen.Response(200, SubmodelElementMetadata{}), nil

	// TODO: Uncomment the next line to return response Response(400, Result{}) or use other options such as http.Ok ...
	// return gen.Response(400, Result{}), nil

	// TODO: Uncomment the next line to return response Response(401, Result{}) or use other options such as http.Ok ...
	// return gen.Response(401, Result{}), nil

	// TODO: Uncomment the next line to return response Response(403, Result{}) or use other options such as http.Ok ...
	// return gen.Response(403, Result{}), nil

	// TODO: Uncomment the next line to return response Response(404, Result{}) or use other options such as http.Ok ...
	// return gen.Response(404, Result{}), nil

	// TODO: Uncomment the next line to return response Response(500, Result{}) or use other options such as http.Ok ...
	// return gen.Response(500, Result{}), nil

	// TODO: Uncomment the next line to return response Response(0, Result{}) or use other options such as http.Ok ...
	// return gen.Response(0, Result{}), nil

	return gen.Response(http.StatusNotImplemented, nil), errors.New("GetSubmodelElementByPathMetadataSubmodelRepo method not implemented")
}

// PatchSubmodelElementByPathMetadataSubmodelRepo - Updates the metadata attributes an existing SubmodelElement
func (s *SubmodelRepositoryAPIAPIService) PatchSubmodelElementByPathMetadataSubmodelRepo(ctx context.Context, submodelIdentifier string, idShortPath string, submodelElementMetadata gen.SubmodelElementMetadata) (gen.ImplResponse, error) {
	// TODO - update PatchSubmodelElementByPathMetadataSubmodelRepo with the required logic for this service method.
	// Add api_submodel_repository_api_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(204, {}) or use other options such as http.Ok ...
	// return gen.Response(204, nil),nil

	// TODO: Uncomment the next line to return response Response(400, Result{}) or use other options such as http.Ok ...
	// return gen.Response(400, Result{}), nil

	// TODO: Uncomment the next line to return response Response(401, Result{}) or use other options such as http.Ok ...
	// return gen.Response(401, Result{}), nil

	// TODO: Uncomment the next line to return response Response(403, Result{}) or use other options such as http.Ok ...
	// return gen.Response(403, Result{}), nil

	// TODO: Uncomment the next line to return response Response(404, Result{}) or use other options such as http.Ok ...
	// return gen.Response(404, Result{}), nil

	// TODO: Uncomment the next line to return response Response(500, Result{}) or use other options such as http.Ok ...
	// return gen.Response(500, Result{}), nil

	// TODO: Uncomment the next line to return response Response(0, Result{}) or use other options such as http.Ok ...
	// return gen.Response(0, Result{}), nil

	return gen.Response(http.StatusNotImplemented, nil), errors.New("PatchSubmodelElementByPathMetadataSubmodelRepo method not implemented")
}

// GetSubmodelElementByPathValueOnlySubmodelRepo - Returns a specific submodel element from the Submodel at a specified path in the ValueOnly representation
func (s *SubmodelRepositoryAPIAPIService) GetSubmodelElementByPathValueOnlySubmodelRepo(ctx context.Context, submodelIdentifier string, idShortPath string, level string, extent string) (gen.ImplResponse, error) {
	// TODO - update GetSubmodelElementByPathValueOnlySubmodelRepo with the required logic for this service method.
	// Add api_submodel_repository_api_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, SubmodelElementValue{}) or use other options such as http.Ok ...
	// return gen.Response(200, SubmodelElementValue{}), nil

	// TODO: Uncomment the next line to return response Response(400, Result{}) or use other options such as http.Ok ...
	// return gen.Response(400, Result{}), nil

	// TODO: Uncomment the next line to return response Response(401, Result{}) or use other options such as http.Ok ...
	// return gen.Response(401, Result{}), nil

	// TODO: Uncomment the next line to return response Response(403, Result{}) or use other options such as http.Ok ...
	// return gen.Response(403, Result{}), nil

	// TODO: Uncomment the next line to return response Response(404, Result{}) or use other options such as http.Ok ...
	// return gen.Response(404, Result{}), nil

	// TODO: Uncomment the next line to return response Response(500, Result{}) or use other options such as http.Ok ...
	// return gen.Response(500, Result{}), nil

	// TODO: Uncomment the next line to return response Response(0, Result{}) or use other options such as http.Ok ...
	// return gen.Response(0, Result{}), nil

	return gen.Response(http.StatusNotImplemented, nil), errors.New("GetSubmodelElementByPathValueOnlySubmodelRepo method not implemented")
}

// PatchSubmodelElementByPathValueOnlySubmodelRepo - Updates the value of an existing SubmodelElement
func (s *SubmodelRepositoryAPIAPIService) PatchSubmodelElementByPathValueOnlySubmodelRepo(ctx context.Context, submodelIdentifier string, idShortPath string, submodelElementValue gen.SubmodelElementValue, level string) (gen.ImplResponse, error) {
	// TODO - update PatchSubmodelElementByPathValueOnlySubmodelRepo with the required logic for this service method.
	// Add api_submodel_repository_api_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(204, {}) or use other options such as http.Ok ...
	// return gen.Response(204, nil),nil

	// TODO: Uncomment the next line to return response Response(400, Result{}) or use other options such as http.Ok ...
	// return gen.Response(400, Result{}), nil

	// TODO: Uncomment the next line to return response Response(401, Result{}) or use other options such as http.Ok ...
	// return gen.Response(401, Result{}), nil

	// TODO: Uncomment the next line to return response Response(403, Result{}) or use other options such as http.Ok ...
	// return gen.Response(403, Result{}), nil

	// TODO: Uncomment the next line to return response Response(404, Result{}) or use other options such as http.Ok ...
	// return gen.Response(404, Result{}), nil

	// TODO: Uncomment the next line to return response Response(500, Result{}) or use other options such as http.Ok ...
	// return gen.Response(500, Result{}), nil

	// TODO: Uncomment the next line to return response Response(0, Result{}) or use other options such as http.Ok ...
	// return gen.Response(0, Result{}), nil

	return gen.Response(http.StatusNotImplemented, nil), errors.New("PatchSubmodelElementByPathValueOnlySubmodelRepo method not implemented")
}

// GetSubmodelElementByPathReferenceSubmodelRepo - Returns the Referene of a specific submodel element from the Submodel at a specified path
func (s *SubmodelRepositoryAPIAPIService) GetSubmodelElementByPathReferenceSubmodelRepo(ctx context.Context, submodelIdentifier string, idShortPath string) (gen.ImplResponse, error) {
	// TODO - update GetSubmodelElementByPathReferenceSubmodelRepo with the required logic for this service method.
	// Add api_submodel_repository_api_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, Reference{}) or use other options such as http.Ok ...
	// return gen.Response(200, Reference{}), nil

	// TODO: Uncomment the next line to return response Response(400, Result{}) or use other options such as http.Ok ...
	// return gen.Response(400, Result{}), nil

	// TODO: Uncomment the next line to return response Response(401, Result{}) or use other options such as http.Ok ...
	// return gen.Response(401, Result{}), nil

	// TODO: Uncomment the next line to return response Response(403, Result{}) or use other options such as http.Ok ...
	// return gen.Response(403, Result{}), nil

	// TODO: Uncomment the next line to return response Response(404, Result{}) or use other options such as http.Ok ...
	// return gen.Response(404, Result{}), nil

	// TODO: Uncomment the next line to return response Response(500, Result{}) or use other options such as http.Ok ...
	// return gen.Response(500, Result{}), nil

	// TODO: Uncomment the next line to return response Response(0, Result{}) or use other options such as http.Ok ...
	// return gen.Response(0, Result{}), nil

	return gen.Response(http.StatusNotImplemented, nil), errors.New("GetSubmodelElementByPathReferenceSubmodelRepo method not implemented")
}

// GetSubmodelElementByPathPathSubmodelRepo - Returns a specific submodel element from the Submodel at a specified path in the Path notation
func (s *SubmodelRepositoryAPIAPIService) GetSubmodelElementByPathPathSubmodelRepo(ctx context.Context, submodelIdentifier string, idShortPath string, level string) (gen.ImplResponse, error) {
	// TODO - update GetSubmodelElementByPathPathSubmodelRepo with the required logic for this service method.
	// Add api_submodel_repository_api_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, []string{}) or use other options such as http.Ok ...
	// return gen.Response(200, []string{}), nil

	// TODO: Uncomment the next line to return response Response(400, Result{}) or use other options such as http.Ok ...
	// return gen.Response(400, Result{}), nil

	// TODO: Uncomment the next line to return response Response(401, Result{}) or use other options such as http.Ok ...
	// return gen.Response(401, Result{}), nil

	// TODO: Uncomment the next line to return response Response(403, Result{}) or use other options such as http.Ok ...
	// return gen.Response(403, Result{}), nil

	// TODO: Uncomment the next line to return response Response(404, Result{}) or use other options such as http.Ok ...
	// return gen.Response(404, Result{}), nil

	// TODO: Uncomment the next line to return response Response(500, Result{}) or use other options such as http.Ok ...
	// return gen.Response(500, Result{}), nil

	// TODO: Uncomment the next line to return response Response(0, Result{}) or use other options such as http.Ok ...
	// return gen.Response(0, Result{}), nil

	return gen.Response(http.StatusNotImplemented, nil), errors.New("GetSubmodelElementByPathPathSubmodelRepo method not implemented")
}

// GetFileByPathSubmodelRepo - Downloads file content from a specific submodel element from the Submodel at a specified path
func (s *SubmodelRepositoryAPIAPIService) GetFileByPathSubmodelRepo(ctx context.Context, submodelIdentifier string, idShortPath string) (gen.ImplResponse, error) {
	// TODO - update GetFileByPathSubmodelRepo with the required logic for this service method.
	// Add api_submodel_repository_api_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, *os.File{}) or use other options such as http.Ok ...
	// return gen.Response(200, *os.File{}), nil

	// TODO: Uncomment the next line to return response Response(400, Result{}) or use other options such as http.Ok ...
	// return gen.Response(400, Result{}), nil

	// TODO: Uncomment the next line to return response Response(401, Result{}) or use other options such as http.Ok ...
	// return gen.Response(401, Result{}), nil

	// TODO: Uncomment the next line to return response Response(403, Result{}) or use other options such as http.Ok ...
	// return gen.Response(403, Result{}), nil

	// TODO: Uncomment the next line to return response Response(404, Result{}) or use other options such as http.Ok ...
	// return gen.Response(404, Result{}), nil

	// TODO: Uncomment the next line to return response Response(405, Result{}) or use other options such as http.Ok ...
	// return gen.Response(405, Result{}), nil

	// TODO: Uncomment the next line to return response Response(500, Result{}) or use other options such as http.Ok ...
	// return gen.Response(500, Result{}), nil

	// TODO: Uncomment the next line to return response Response(0, Result{}) or use other options such as http.Ok ...
	// return gen.Response(0, Result{}), nil

	return gen.Response(http.StatusNotImplemented, nil), errors.New("GetFileByPathSubmodelRepo method not implemented")
}

// PutFileByPathSubmodelRepo - Uploads file content to an existing submodel element at a specified path within submodel elements hierarchy
func (s *SubmodelRepositoryAPIAPIService) PutFileByPathSubmodelRepo(ctx context.Context, submodelIdentifier string, idShortPath string, fileName string, file *os.File) (gen.ImplResponse, error) {
	// TODO - update PutFileByPathSubmodelRepo with the required logic for this service method.
	// Add api_submodel_repository_api_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(204, {}) or use other options such as http.Ok ...
	// return gen.Response(204, nil),nil

	// TODO: Uncomment the next line to return response Response(400, Result{}) or use other options such as http.Ok ...
	// return gen.Response(400, Result{}), nil

	// TODO: Uncomment the next line to return response Response(401, Result{}) or use other options such as http.Ok ...
	// return gen.Response(401, Result{}), nil

	// TODO: Uncomment the next line to return response Response(403, Result{}) or use other options such as http.Ok ...
	// return gen.Response(403, Result{}), nil

	// TODO: Uncomment the next line to return response Response(404, Result{}) or use other options such as http.Ok ...
	// return gen.Response(404, Result{}), nil

	// TODO: Uncomment the next line to return response Response(405, Result{}) or use other options such as http.Ok ...
	// return gen.Response(405, Result{}), nil

	// TODO: Uncomment the next line to return response Response(500, Result{}) or use other options such as http.Ok ...
	// return gen.Response(500, Result{}), nil

	// TODO: Uncomment the next line to return response Response(0, Result{}) or use other options such as http.Ok ...
	// return gen.Response(0, Result{}), nil

	return gen.Response(http.StatusNotImplemented, nil), errors.New("PutFileByPathSubmodelRepo method not implemented")
}

// DeleteFileByPathSubmodelRepo - Deletes file content of an existing submodel element at a specified path within submodel elements hierarchy
func (s *SubmodelRepositoryAPIAPIService) DeleteFileByPathSubmodelRepo(ctx context.Context, submodelIdentifier string, idShortPath string) (gen.ImplResponse, error) {
	// TODO - update DeleteFileByPathSubmodelRepo with the required logic for this service method.
	// Add api_submodel_repository_api_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, {}) or use other options such as http.Ok ...
	// return gen.Response(200, nil),nil

	// TODO: Uncomment the next line to return response Response(400, Result{}) or use other options such as http.Ok ...
	// return gen.Response(400, Result{}), nil

	// TODO: Uncomment the next line to return response Response(401, Result{}) or use other options such as http.Ok ...
	// return gen.Response(401, Result{}), nil

	// TODO: Uncomment the next line to return response Response(403, Result{}) or use other options such as http.Ok ...
	// return gen.Response(403, Result{}), nil

	// TODO: Uncomment the next line to return response Response(404, Result{}) or use other options such as http.Ok ...
	// return gen.Response(404, Result{}), nil

	// TODO: Uncomment the next line to return response Response(500, Result{}) or use other options such as http.Ok ...
	// return gen.Response(500, Result{}), nil

	// TODO: Uncomment the next line to return response Response(0, Result{}) or use other options such as http.Ok ...
	// return gen.Response(0, Result{}), nil

	return gen.Response(http.StatusNotImplemented, nil), errors.New("DeleteFileByPathSubmodelRepo method not implemented")
}

// InvokeOperationSubmodelRepo - Synchronously or asynchronously invokes an Operation at a specified path
func (s *SubmodelRepositoryAPIAPIService) InvokeOperationSubmodelRepo(ctx context.Context, submodelIdentifier string, idShortPath string, operationRequest gen.OperationRequest, async bool) (gen.ImplResponse, error) {
	// TODO - update InvokeOperationSubmodelRepo with the required logic for this service method.
	// Add api_submodel_repository_api_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, OperationResult{}) or use other options such as http.Ok ...
	// return gen.Response(200, OperationResult{}), nil

	// TODO: Uncomment the next line to return response Response(400, Result{}) or use other options such as http.Ok ...
	// return gen.Response(400, Result{}), nil

	// TODO: Uncomment the next line to return response Response(401, Result{}) or use other options such as http.Ok ...
	// return gen.Response(401, Result{}), nil

	// TODO: Uncomment the next line to return response Response(403, Result{}) or use other options such as http.Ok ...
	// return gen.Response(403, Result{}), nil

	// TODO: Uncomment the next line to return response Response(404, Result{}) or use other options such as http.Ok ...
	// return gen.Response(404, Result{}), nil

	// TODO: Uncomment the next line to return response Response(405, Result{}) or use other options such as http.Ok ...
	// return gen.Response(405, Result{}), nil

	// TODO: Uncomment the next line to return response Response(500, Result{}) or use other options such as http.Ok ...
	// return gen.Response(500, Result{}), nil

	// TODO: Uncomment the next line to return response Response(0, Result{}) or use other options such as http.Ok ...
	// return gen.Response(0, Result{}), nil

	return gen.Response(http.StatusNotImplemented, nil), errors.New("InvokeOperationSubmodelRepo method not implemented")
}

// InvokeOperationValueOnly - Synchronously or asynchronously invokes an Operation at a specified path
func (s *SubmodelRepositoryAPIAPIService) InvokeOperationValueOnly(ctx context.Context, aasIdentifier string, submodelIdentifier string, idShortPath string, operationRequestValueOnly gen.OperationRequestValueOnly, async bool) (gen.ImplResponse, error) {
	// TODO - update InvokeOperationValueOnly with the required logic for this service method.
	// Add api_submodel_repository_api_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, OperationResultValueOnly{}) or use other options such as http.Ok ...
	// return gen.Response(200, OperationResultValueOnly{}), nil

	// TODO: Uncomment the next line to return response Response(400, Result{}) or use other options such as http.Ok ...
	// return gen.Response(400, Result{}), nil

	// TODO: Uncomment the next line to return response Response(401, Result{}) or use other options such as http.Ok ...
	// return gen.Response(401, Result{}), nil

	// TODO: Uncomment the next line to return response Response(403, Result{}) or use other options such as http.Ok ...
	// return gen.Response(403, Result{}), nil

	// TODO: Uncomment the next line to return response Response(404, Result{}) or use other options such as http.Ok ...
	// return gen.Response(404, Result{}), nil

	// TODO: Uncomment the next line to return response Response(500, Result{}) or use other options such as http.Ok ...
	// return gen.Response(500, Result{}), nil

	// TODO: Uncomment the next line to return response Response(0, Result{}) or use other options such as http.Ok ...
	// return gen.Response(0, Result{}), nil

	return gen.Response(http.StatusNotImplemented, nil), errors.New("InvokeOperationValueOnly method not implemented")
}

// InvokeOperationAsync - Asynchronously invokes an Operation at a specified path
func (s *SubmodelRepositoryAPIAPIService) InvokeOperationAsync(ctx context.Context, submodelIdentifier string, idShortPath string, operationRequest gen.OperationRequest) (gen.ImplResponse, error) {
	// TODO - update InvokeOperationAsync with the required logic for this service method.
	// Add api_submodel_repository_api_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(202, {}) or use other options such as http.Ok ...
	// return gen.Response(202, nil),nil

	// TODO: Uncomment the next line to return response Response(400, Result{}) or use other options such as http.Ok ...
	// return gen.Response(400, Result{}), nil

	// TODO: Uncomment the next line to return response Response(401, Result{}) or use other options such as http.Ok ...
	// return gen.Response(401, Result{}), nil

	// TODO: Uncomment the next line to return response Response(403, Result{}) or use other options such as http.Ok ...
	// return gen.Response(403, Result{}), nil

	// TODO: Uncomment the next line to return response Response(404, Result{}) or use other options such as http.Ok ...
	// return gen.Response(404, Result{}), nil

	// TODO: Uncomment the next line to return response Response(405, Result{}) or use other options such as http.Ok ...
	// return gen.Response(405, Result{}), nil

	// TODO: Uncomment the next line to return response Response(500, Result{}) or use other options such as http.Ok ...
	// return gen.Response(500, Result{}), nil

	// TODO: Uncomment the next line to return response Response(0, Result{}) or use other options such as http.Ok ...
	// return gen.Response(0, Result{}), nil

	return gen.Response(http.StatusNotImplemented, nil), errors.New("InvokeOperationAsync method not implemented")
}

// InvokeOperationAsyncValueOnly - Asynchronously invokes an Operation at a specified path
func (s *SubmodelRepositoryAPIAPIService) InvokeOperationAsyncValueOnly(ctx context.Context, aasIdentifier string, submodelIdentifier string, idShortPath string, operationRequestValueOnly gen.OperationRequestValueOnly) (gen.ImplResponse, error) {
	// TODO - update InvokeOperationAsyncValueOnly with the required logic for this service method.
	// Add api_submodel_repository_api_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(202, {}) or use other options such as http.Ok ...
	// return gen.Response(202, nil),nil

	// TODO: Uncomment the next line to return response Response(400, Result{}) or use other options such as http.Ok ...
	// return gen.Response(400, Result{}), nil

	// TODO: Uncomment the next line to return response Response(401, Result{}) or use other options such as http.Ok ...
	// return gen.Response(401, Result{}), nil

	// TODO: Uncomment the next line to return response Response(403, Result{}) or use other options such as http.Ok ...
	// return gen.Response(403, Result{}), nil

	// TODO: Uncomment the next line to return response Response(404, Result{}) or use other options such as http.Ok ...
	// return gen.Response(404, Result{}), nil

	// TODO: Uncomment the next line to return response Response(500, Result{}) or use other options such as http.Ok ...
	// return gen.Response(500, Result{}), nil

	// TODO: Uncomment the next line to return response Response(0, Result{}) or use other options such as http.Ok ...
	// return gen.Response(0, Result{}), nil

	return gen.Response(http.StatusNotImplemented, nil), errors.New("InvokeOperationAsyncValueOnly method not implemented")
}

// GetOperationAsyncStatus - Returns the status of an asynchronously invoked Operation
func (s *SubmodelRepositoryAPIAPIService) GetOperationAsyncStatus(ctx context.Context, submodelIdentifier string, idShortPath string, handleId string) (gen.ImplResponse, error) {
	// TODO - update GetOperationAsyncStatus with the required logic for this service method.
	// Add api_submodel_repository_api_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, BaseOperationResult{}) or use other options such as http.Ok ...
	// return gen.Response(200, BaseOperationResult{}), nil

	// TODO: Uncomment the next line to return response Response(302, {}) or use other options such as http.Ok ...
	// return gen.Response(302, nil),nil

	// TODO: Uncomment the next line to return response Response(400, Result{}) or use other options such as http.Ok ...
	// return gen.Response(400, Result{}), nil

	// TODO: Uncomment the next line to return response Response(401, Result{}) or use other options such as http.Ok ...
	// return gen.Response(401, Result{}), nil

	// TODO: Uncomment the next line to return response Response(403, Result{}) or use other options such as http.Ok ...
	// return gen.Response(403, Result{}), nil

	// TODO: Uncomment the next line to return response Response(404, Result{}) or use other options such as http.Ok ...
	// return gen.Response(404, Result{}), nil

	// TODO: Uncomment the next line to return response Response(500, Result{}) or use other options such as http.Ok ...
	// return gen.Response(500, Result{}), nil

	// TODO: Uncomment the next line to return response Response(0, Result{}) or use other options such as http.Ok ...
	// return gen.Response(0, Result{}), nil

	return gen.Response(http.StatusNotImplemented, nil), errors.New("GetOperationAsyncStatus method not implemented")
}

// GetOperationAsyncResult - Returns the Operation result of an asynchronously invoked Operation
func (s *SubmodelRepositoryAPIAPIService) GetOperationAsyncResult(ctx context.Context, submodelIdentifier string, idShortPath string, handleId string) (gen.ImplResponse, error) {
	// TODO - update GetOperationAsyncResult with the required logic for this service method.
	// Add api_submodel_repository_api_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, OperationResult{}) or use other options such as http.Ok ...
	// return gen.Response(200, OperationResult{}), nil

	// TODO: Uncomment the next line to return response Response(400, Result{}) or use other options such as http.Ok ...
	// return gen.Response(400, Result{}), nil

	// TODO: Uncomment the next line to return response Response(401, Result{}) or use other options such as http.Ok ...
	// return gen.Response(401, Result{}), nil

	// TODO: Uncomment the next line to return response Response(403, Result{}) or use other options such as http.Ok ...
	// return gen.Response(403, Result{}), nil

	// TODO: Uncomment the next line to return response Response(404, Result{}) or use other options such as http.Ok ...
	// return gen.Response(404, Result{}), nil

	// TODO: Uncomment the next line to return response Response(500, Result{}) or use other options such as http.Ok ...
	// return gen.Response(500, Result{}), nil

	// TODO: Uncomment the next line to return response Response(0, Result{}) or use other options such as http.Ok ...
	// return gen.Response(0, Result{}), nil

	return gen.Response(http.StatusNotImplemented, nil), errors.New("GetOperationAsyncResult method not implemented")
}

// GetOperationAsyncResultValueOnly - Returns the Operation result of an asynchronously invoked Operation
func (s *SubmodelRepositoryAPIAPIService) GetOperationAsyncResultValueOnly(ctx context.Context, submodelIdentifier string, idShortPath string, handleId string) (gen.ImplResponse, error) {
	// TODO - update GetOperationAsyncResultValueOnly with the required logic for this service method.
	// Add api_submodel_repository_api_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, OperationResultValueOnly{}) or use other options such as http.Ok ...
	// return gen.Response(200, OperationResultValueOnly{}), nil

	// TODO: Uncomment the next line to return response Response(400, Result{}) or use other options such as http.Ok ...
	// return gen.Response(400, Result{}), nil

	// TODO: Uncomment the next line to return response Response(401, Result{}) or use other options such as http.Ok ...
	// return gen.Response(401, Result{}), nil

	// TODO: Uncomment the next line to return response Response(403, Result{}) or use other options such as http.Ok ...
	// return gen.Response(403, Result{}), nil

	// TODO: Uncomment the next line to return response Response(404, Result{}) or use other options such as http.Ok ...
	// return gen.Response(404, Result{}), nil

	// TODO: Uncomment the next line to return response Response(500, Result{}) or use other options such as http.Ok ...
	// return gen.Response(500, Result{}), nil

	// TODO: Uncomment the next line to return response Response(0, Result{}) or use other options such as http.Ok ...
	// return gen.Response(0, Result{}), nil

	return gen.Response(http.StatusNotImplemented, nil), errors.New("GetOperationAsyncResultValueOnly method not implemented")
}
