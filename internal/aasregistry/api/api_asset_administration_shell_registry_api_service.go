// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * DotAAS Part 2 | HTTP/REST | Asset Administration Shell Registry Service Specification
 *
 * The Full Profile of the Asset Administration Shell Registry Service Specification as part of the [Specification of the Asset Administration Shell: Part 2](https://industrialdigitaltwin.org/en/content-hub/aasspecifications).   Copyright: Industrial Digital Twin Association (IDTA) 2025
 *
 * API version: V3.1.1_SSP-001
 * Contact: info@idtwin.org
 */

package ass_registry_api

import (
	"context"
	"errors"
	"net/http"
	"strings"

	persistence_postgresql "github.com/eclipse-basyx/basyx-go-components/internal/aasregistry/persistence"
	"github.com/eclipse-basyx/basyx-go-components/internal/common"
	"github.com/eclipse-basyx/basyx-go-components/internal/common/model"
)

const (
	componentName = "AASR"
)

// AssetAdministrationShellRegistryAPIAPIService is a service that implements the logic for the AssetAdministrationShellRegistryAPIAPIServicer
// This service should implement the business logic for every endpoint for the AssetAdministrationShellRegistryAPIAPI API.
// Include any external packages or services that will be required by this service.
type AssetAdministrationShellRegistryAPIAPIService struct {
	aasRegistryBackend persistence_postgresql.PostgreSQLAASRegistryDatabase
}

// NewAssetAdministrationShellRegistryAPIAPIService creates a default api service
func NewAssetAdministrationShellRegistryAPIAPIService(databaseBackend persistence_postgresql.PostgreSQLAASRegistryDatabase) *AssetAdministrationShellRegistryAPIAPIService {
	return &AssetAdministrationShellRegistryAPIAPIService{
		aasRegistryBackend: databaseBackend,
	}
}

// GetAllAssetAdministrationShellDescriptors - Returns all Asset Administration Shell Descriptors
func (s *AssetAdministrationShellRegistryAPIAPIService) GetAllAssetAdministrationShellDescriptors(ctx context.Context, limit int32, cursor string, assetKind model.AssetKind, assetType string) (model.ImplResponse, error) {
	// TODO - update GetAllAssetAdministrationShellDescriptors with the required logic for this service method.
	// Add api_asset_administration_shell_registry_api_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, GetAssetAdministrationShellDescriptorsResult{}) or use other options such as http.Ok ...
	// return Response(200, GetAssetAdministrationShellDescriptorsResult{}), nil

	// TODO: Uncomment the next line to return response Response(400, Result{}) or use other options such as http.Ok ...
	// return Response(400, Result{}), nil

	// TODO: Uncomment the next line to return response Response(403, Result{}) or use other options such as http.Ok ...
	// return Response(403, Result{}), nil

	// TODO: Uncomment the next line to return response Response(500, Result{}) or use other options such as http.Ok ...
	// return Response(500, Result{}), nil

	// TODO: Uncomment the next line to return response Response(0, Result{}) or use other options such as http.Ok ...
	// return Response(0, Result{}), nil

	var internalCursor string
	if strings.TrimSpace(cursor) != "" {
		dec, decErr := common.DecodeString(cursor)
		if decErr != nil {
			return common.NewErrorResponse(
				decErr, http.StatusBadRequest, componentName, "GetAllAssetAdministrationShellDescriptors", "BadCursor",
			), nil
		}
		internalCursor = dec
	}
	aasds, nextCursor, err := s.aasRegistryBackend.ListAssetAdministrationShellDescriptors(ctx, limit, internalCursor, assetKind, assetType)
	if err != nil {
		return common.NewErrorResponse(
			err, http.StatusInternalServerError, componentName, "GetAllAssetAdministrationShellDescriptors", "InternalServerError",
		), err
	}

	pm := model.PagedResultPagingMetadata{}
	if nextCursor != "" {
		pm.Cursor = common.EncodeString(nextCursor)
	}
	res := interface{}(struct {
		PagingMetadata interface{}
		Result         interface{}
	}{
		PagingMetadata: pm,
		Result:         aasds,
	})
	return model.Response(http.StatusOK, res), nil
}

// PostAssetAdministrationShellDescriptor - Creates a new Asset Administration Shell Descriptor, i.e. registers an AAS
func (s *AssetAdministrationShellRegistryAPIAPIService) PostAssetAdministrationShellDescriptor(ctx context.Context, assetAdministrationShellDescriptor model.AssetAdministrationShellDescriptor) (model.ImplResponse, error) {
	// TODO - update PostAssetAdministrationShellDescriptor with the required logic for this service method.
	// Add api_asset_administration_shell_registry_api_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(201, AssetAdministrationShellDescriptor{}) or use other options such as http.Ok ...
	// return Response(201, AssetAdministrationShellDescriptor{}), nil

	// TODO: Uncomment the next line to return response Response(400, Result{}) or use other options such as http.Ok ...
	// return Response(400, Result{}), nil

	// TODO: Uncomment the next line to return response Response(403, Result{}) or use other options such as http.Ok ...
	// return Response(403, Result{}), nil

	// TODO: Uncomment the next line to return response Response(409, Result{}) or use other options such as http.Ok ...
	// return Response(409, Result{}), nil

	// TODO: Uncomment the next line to return response Response(500, Result{}) or use other options such as http.Ok ...
	// return Response(500, Result{}), nil

	// TODO: Uncomment the next line to return response Response(0, Result{}) or use other options such as http.Ok ...
	// return Response(0, Result{}), nil

	err := s.aasRegistryBackend.InsertAdministrationShellDescriptor(ctx, assetAdministrationShellDescriptor)
	if err != nil {
		switch {
		case common.IsErrBadRequest(err):
			return common.NewErrorResponse(
				err, http.StatusBadRequest, componentName, "InsertAdministrationShellDescriptor", "BadRequest",
			), nil
		case common.IsErrConflict(err):
			return common.NewErrorResponse(
				err, http.StatusConflict, componentName, "InsertAdministrationShellDescriptor", "Conflict",
			), nil
		default:
			return common.NewErrorResponse(
				err, http.StatusInternalServerError, componentName, "InsertAdministrationShellDescriptor", "Unhandled",
			), err
		}
	}

	return model.Response(http.StatusCreated, assetAdministrationShellDescriptor), nil
}

// GetAssetAdministrationShellDescriptorById - Returns a specific Asset Administration Shell Descriptor
func (s *AssetAdministrationShellRegistryAPIAPIService) GetAssetAdministrationShellDescriptorById(ctx context.Context, aasIdentifier string) (model.ImplResponse, error) {
	// TODO - update GetAssetAdministrationShellDescriptorById with the required logic for this service method.
	// Add api_asset_administration_shell_registry_api_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, AssetAdministrationShellDescriptor{}) or use other options such as http.Ok ...
	// return Response(200, AssetAdministrationShellDescriptor{}), nil

	// TODO: Uncomment the next line to return response Response(400, Result{}) or use other options such as http.Ok ...
	// return Response(400, Result{}), nil

	// TODO: Uncomment the next line to return response Response(403, Result{}) or use other options such as http.Ok ...
	// return Response(403, Result{}), nil

	// TODO: Uncomment the next line to return response Response(404, Result{}) or use other options such as http.Ok ...
	// return Response(404, Result{}), nil

	// TODO: Uncomment the next line to return response Response(500, Result{}) or use other options such as http.Ok ...
	// return Response(500, Result{}), nil

	// TODO: Uncomment the next line to return response Response(0, Result{}) or use other options such as http.Ok ...
	// return Response(0, Result{}), nil

	decoded, decodeErr := common.DecodeString(aasIdentifier)
	if decodeErr != nil {
		return common.NewErrorResponse(
			decodeErr, http.StatusBadRequest, componentName, "GetAllAssetLinksById", "BadRequest-Decode",
		), nil
	}

	result, err := s.aasRegistryBackend.GetAssetAdministrationShellDescriptorById(ctx, string(decoded))
	if err != nil {
		switch {
		default:
			return common.NewErrorResponse(
				err, http.StatusInternalServerError, componentName, "GetAssetAdministrationShellDescriptorById", "Unhandled",
			), err
		}
	}

	return model.Response(http.StatusOK, result), nil
}

// PutAssetAdministrationShellDescriptorById - Creates or updates an existing Asset Administration Shell Descriptor
func (s *AssetAdministrationShellRegistryAPIAPIService) PutAssetAdministrationShellDescriptorById(ctx context.Context, aasIdentifier string, assetAdministrationShellDescriptor model.AssetAdministrationShellDescriptor) (model.ImplResponse, error) {
	// TODO - update PutAssetAdministrationShellDescriptorById with the required logic for this service method.
	// Add api_asset_administration_shell_registry_api_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(201, AssetAdministrationShellDescriptor{}) or use other options such as http.Ok ...
	// return Response(201, AssetAdministrationShellDescriptor{}), nil

	// TODO: Uncomment the next line to return response Response(204, {}) or use other options such as http.Ok ...
	// return Response(204, nil),nil

	// TODO: Uncomment the next line to return response Response(400, Result{}) or use other options such as http.Ok ...
	// return Response(400, Result{}), nil

	// TODO: Uncomment the next line to return response Response(403, Result{}) or use other options such as http.Ok ...
	// return Response(403, Result{}), nil

	// TODO: Uncomment the next line to return response Response(500, Result{}) or use other options such as http.Ok ...
	// return Response(500, Result{}), nil

	// TODO: Uncomment the next line to return response Response(0, Result{}) or use other options such as http.Ok ...
	// return Response(0, Result{}), nil

	return model.Response(http.StatusNotImplemented, nil), errors.New("PutAssetAdministrationShellDescriptorById method not implemented")
}

// DeleteAssetAdministrationShellDescriptorById - Deletes an Asset Administration Shell Descriptor, i.e. de-registers an AAS
func (s *AssetAdministrationShellRegistryAPIAPIService) DeleteAssetAdministrationShellDescriptorById(ctx context.Context, aasIdentifier string) (model.ImplResponse, error) {
	decoded, decodeErr := common.DecodeString(aasIdentifier)
	if decodeErr != nil {
		return common.NewErrorResponse(
			decodeErr, http.StatusBadRequest, componentName, "DeleteAssetAdministrationShellDescriptorById", "BadRequest-Decode",
		), nil
	}

	if err := s.aasRegistryBackend.DeleteAssetAdministrationShellDescriptorById(ctx, decoded); err != nil {
		switch {
		case common.IsErrNotFound(err):
			return common.NewErrorResponse(
				err, http.StatusNotFound, componentName, "DeleteAssetAdministrationShellDescriptorById", "NotFound",
			), nil
		case common.IsErrBadRequest(err):
			return common.NewErrorResponse(
				err, http.StatusBadRequest, componentName, "DeleteAssetAdministrationShellDescriptorById", "BadRequest",
			), nil
		default:
			return common.NewErrorResponse(
				err, http.StatusInternalServerError, componentName, "DeleteAssetAdministrationShellDescriptorById", "Unhandled",
			), err
		}
	}

	return model.Response(http.StatusNoContent, nil), nil
}

// GetAllSubmodelDescriptorsThroughSuperpath - Returns all Submodel Descriptors
func (s *AssetAdministrationShellRegistryAPIAPIService) GetAllSubmodelDescriptorsThroughSuperpath(ctx context.Context, aasIdentifier string, limit int32, cursor string) (model.ImplResponse, error) {
	// TODO - update GetAllSubmodelDescriptorsThroughSuperpath with the required logic for this service method.
	// Add api_asset_administration_shell_registry_api_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, GetSubmodelDescriptorsResult{}) or use other options such as http.Ok ...
	// return Response(200, GetSubmodelDescriptorsResult{}), nil

	// TODO: Uncomment the next line to return response Response(400, Result{}) or use other options such as http.Ok ...
	// return Response(400, Result{}), nil

	// TODO: Uncomment the next line to return response Response(403, Result{}) or use other options such as http.Ok ...
	// return Response(403, Result{}), nil

	// TODO: Uncomment the next line to return response Response(404, Result{}) or use other options such as http.Ok ...
	// return Response(404, Result{}), nil

	// TODO: Uncomment the next line to return response Response(500, Result{}) or use other options such as http.Ok ...
	// return Response(500, Result{}), nil

	// TODO: Uncomment the next line to return response Response(0, Result{}) or use other options such as http.Ok ...
	// return Response(0, Result{}), nil

	return model.Response(http.StatusNotImplemented, nil), errors.New("GetAllSubmodelDescriptorsThroughSuperpath method not implemented")
}

// PostSubmodelDescriptorThroughSuperpath - Creates a new Submodel Descriptor, i.e. registers a submodel
func (s *AssetAdministrationShellRegistryAPIAPIService) PostSubmodelDescriptorThroughSuperpath(ctx context.Context, aasIdentifier string, submodelDescriptor model.SubmodelDescriptor) (model.ImplResponse, error) {
	// TODO - update PostSubmodelDescriptorThroughSuperpath with the required logic for this service method.
	// Add api_asset_administration_shell_registry_api_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(201, SubmodelDescriptor{}) or use other options such as http.Ok ...
	// return Response(201, SubmodelDescriptor{}), nil

	// TODO: Uncomment the next line to return response Response(400, Result{}) or use other options such as http.Ok ...
	// return Response(400, Result{}), nil

	// TODO: Uncomment the next line to return response Response(403, Result{}) or use other options such as http.Ok ...
	// return Response(403, Result{}), nil

	// TODO: Uncomment the next line to return response Response(404, Result{}) or use other options such as http.Ok ...
	// return Response(404, Result{}), nil

	// TODO: Uncomment the next line to return response Response(409, Result{}) or use other options such as http.Ok ...
	// return Response(409, Result{}), nil

	// TODO: Uncomment the next line to return response Response(500, Result{}) or use other options such as http.Ok ...
	// return Response(500, Result{}), nil

	// TODO: Uncomment the next line to return response Response(0, Result{}) or use other options such as http.Ok ...
	// return Response(0, Result{}), nil

	return model.Response(http.StatusNotImplemented, nil), errors.New("PostSubmodelDescriptorThroughSuperpath method not implemented")
}

// GetSubmodelDescriptorByIdThroughSuperpath - Returns a specific Submodel Descriptor
func (s *AssetAdministrationShellRegistryAPIAPIService) GetSubmodelDescriptorByIdThroughSuperpath(ctx context.Context, aasIdentifier string, submodelIdentifier string) (model.ImplResponse, error) {
	// TODO - update GetSubmodelDescriptorByIdThroughSuperpath with the required logic for this service method.
	// Add api_asset_administration_shell_registry_api_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, SubmodelDescriptor{}) or use other options such as http.Ok ...
	// return Response(200, SubmodelDescriptor{}), nil

	// TODO: Uncomment the next line to return response Response(400, Result{}) or use other options such as http.Ok ...
	// return Response(400, Result{}), nil

	// TODO: Uncomment the next line to return response Response(403, Result{}) or use other options such as http.Ok ...
	// return Response(403, Result{}), nil

	// TODO: Uncomment the next line to return response Response(404, Result{}) or use other options such as http.Ok ...
	// return Response(404, Result{}), nil

	// TODO: Uncomment the next line to return response Response(500, Result{}) or use other options such as http.Ok ...
	// return Response(500, Result{}), nil

	// TODO: Uncomment the next line to return response Response(0, Result{}) or use other options such as http.Ok ...
	// return Response(0, Result{}), nil

	return model.Response(http.StatusNotImplemented, nil), errors.New("GetSubmodelDescriptorByIdThroughSuperpath method not implemented")
}

// PutSubmodelDescriptorByIdThroughSuperpath - Creates or updates an existing Submodel Descriptor
func (s *AssetAdministrationShellRegistryAPIAPIService) PutSubmodelDescriptorByIdThroughSuperpath(ctx context.Context, aasIdentifier string, submodelIdentifier string, submodelDescriptor model.SubmodelDescriptor) (model.ImplResponse, error) {
	// TODO - update PutSubmodelDescriptorByIdThroughSuperpath with the required logic for this service method.
	// Add api_asset_administration_shell_registry_api_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(201, SubmodelDescriptor{}) or use other options such as http.Ok ...
	// return Response(201, SubmodelDescriptor{}), nil

	// TODO: Uncomment the next line to return response Response(204, {}) or use other options such as http.Ok ...
	// return Response(204, nil),nil

	// TODO: Uncomment the next line to return response Response(400, Result{}) or use other options such as http.Ok ...
	// return Response(400, Result{}), nil

	// TODO: Uncomment the next line to return response Response(403, Result{}) or use other options such as http.Ok ...
	// return Response(403, Result{}), nil

	// TODO: Uncomment the next line to return response Response(404, Result{}) or use other options such as http.Ok ...
	// return Response(404, Result{}), nil

	// TODO: Uncomment the next line to return response Response(500, Result{}) or use other options such as http.Ok ...
	// return Response(500, Result{}), nil

	// TODO: Uncomment the next line to return response Response(0, Result{}) or use other options such as http.Ok ...
	// return Response(0, Result{}), nil

	return model.Response(http.StatusNotImplemented, nil), errors.New("PutSubmodelDescriptorByIdThroughSuperpath method not implemented")
}

// DeleteSubmodelDescriptorByIdThroughSuperpath - Deletes a Submodel Descriptor, i.e. de-registers a submodel
func (s *AssetAdministrationShellRegistryAPIAPIService) DeleteSubmodelDescriptorByIdThroughSuperpath(ctx context.Context, aasIdentifier string, submodelIdentifier string) (model.ImplResponse, error) {
	// TODO - update DeleteSubmodelDescriptorByIdThroughSuperpath with the required logic for this service method.
	// Add api_asset_administration_shell_registry_api_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(204, {}) or use other options such as http.Ok ...
	// return Response(204, nil),nil

	// TODO: Uncomment the next line to return response Response(400, Result{}) or use other options such as http.Ok ...
	// return Response(400, Result{}), nil

	// TODO: Uncomment the next line to return response Response(404, Result{}) or use other options such as http.Ok ...
	// return Response(404, Result{}), nil

	// TODO: Uncomment the next line to return response Response(500, Result{}) or use other options such as http.Ok ...
	// return Response(500, Result{}), nil

	// TODO: Uncomment the next line to return response Response(0, Result{}) or use other options such as http.Ok ...
	// return Response(0, Result{}), nil

	return model.Response(http.StatusNotImplemented, nil), errors.New("DeleteSubmodelDescriptorByIdThroughSuperpath method not implemented")
}
