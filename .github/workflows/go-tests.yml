name: Go Application Tests

on:
  pull_request:
    paths:
      - '**.go'
      - 'go.mod'
      - 'go.sum'
      - '.github/workflows/go-tests.yml'
  push:
    branches: [main]
    paths:
      - '**.go'
      - 'go.mod'
      - 'go.sum'
      - '.github/workflows/go-tests.yml'

jobs:
  # unit-tests:
  #   name: Run Unit Tests
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Check out code
  #       uses: actions/checkout@v5
  #     - name: Set up Go
  #       uses: actions/setup-go@v5
  #       with:
  #         go-version: '1.25'
  #     - name: Get dependencies
  #       run: go mod download
  #     - name: Run unit tests
  #       run: go test ./... -v -tags=unit

  integration-tests:
    name: Run Integration Tests
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v5
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.25'
      - name: Get dependencies
        run: go mod download
      - name: Setup Docker Compose
        run: |
          cd internal/submodelrepository/integration_tests
          docker compose -f docker_compose/docker_compose.yml up -d --build
          echo "Waiting for services to be ready..."
          sleep 30
      - name: Run integration tests
        run: |
          cd internal/submodelrepository/integration_tests
          go test -v .
      - name: Cleanup Docker
        if: always()
        run: |
          cd internal/submodelrepository/integration_tests
          docker compose -f docker_compose/docker_compose.yml down
