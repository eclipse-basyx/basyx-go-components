// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * DotAAS Part 2 | HTTP/REST | Submodel Repository Service Specification
 *
 * The entire Submodel Repository Service Specification as part of the [Specification of the Asset Administration Shell: Part 2](http://industrialdigitaltwin.org/en/content-hub).   Publisher: Industrial Digital Twin Association (IDTA) 2023
 *
 * API version: V3.0.3_SSP-001
 * Contact: info@idtwin.org
 */

package openapi




type Environment struct {

	AssetAdministrationShells []AssetAdministrationShell `json:"assetAdministrationShells,omitempty"`

	Submodels []Submodel `json:"submodels,omitempty"`

	ConceptDescriptions []ConceptDescription `json:"conceptDescriptions,omitempty"`
}

// AssertEnvironmentRequired checks if the required fields are not zero-ed
func AssertEnvironmentRequired(obj Environment) error {
	for _, el := range obj.AssetAdministrationShells {
		if err := AssertAssetAdministrationShellRequired(el); err != nil {
			return err
		}
	}
	for _, el := range obj.Submodels {
		if err := AssertSubmodelRequired(el); err != nil {
			return err
		}
	}
	for _, el := range obj.ConceptDescriptions {
		if err := AssertConceptDescriptionRequired(el); err != nil {
			return err
		}
	}
	return nil
}

// AssertEnvironmentConstraints checks if the values respects the defined constraints
func AssertEnvironmentConstraints(obj Environment) error {
	for _, el := range obj.AssetAdministrationShells {
		if err := AssertAssetAdministrationShellConstraints(el); err != nil {
			return err
		}
	}
	for _, el := range obj.Submodels {
		if err := AssertSubmodelConstraints(el); err != nil {
			return err
		}
	}
	for _, el := range obj.ConceptDescriptions {
		if err := AssertConceptDescriptionConstraints(el); err != nil {
			return err
		}
	}
	return nil
}
