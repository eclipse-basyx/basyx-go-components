// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * DotAAS Part 2 | HTTP/REST | Asset Administration Shell Registry Service Specification
 *
 * The Full Profile of the Asset Administration Shell Registry Service Specification as part of the [Specification of the Asset Administration Shell: Part 2](https://industrialdigitaltwin.org/en/content-hub/aasspecifications).   Copyright: Industrial Digital Twin Association (IDTA) 2025
 *
 * API version: V3.1.1_SSP-001
 * Contact: info@idtwin.org
 */

package apis

import (
	"context"
	"net/http"

	"github.com/eclipse-basyx/basyx-go-components/internal/common/model"
)

// AssetAdministrationShellRegistryAPIAPIRouter defines the required methods for binding the api requests to a responses for the AssetAdministrationShellRegistryAPIAPI
// The AssetAdministrationShellRegistryAPIAPIRouter implementation should parse necessary information from the http request,
// pass the data to a AssetAdministrationShellRegistryAPIAPIServicer to perform the required actions, then write the service results to the http response.
type AssetAdministrationShellRegistryAPIAPIRouter interface {
	GetAllAssetAdministrationShellDescriptors(http.ResponseWriter, *http.Request)
	PostAssetAdministrationShellDescriptor(http.ResponseWriter, *http.Request)
	GetAssetAdministrationShellDescriptorById(http.ResponseWriter, *http.Request)
	PutAssetAdministrationShellDescriptorById(http.ResponseWriter, *http.Request)
	DeleteAssetAdministrationShellDescriptorById(http.ResponseWriter, *http.Request)
	GetAllSubmodelDescriptorsThroughSuperpath(http.ResponseWriter, *http.Request)
	PostSubmodelDescriptorThroughSuperpath(http.ResponseWriter, *http.Request)
	GetSubmodelDescriptorByIdThroughSuperpath(http.ResponseWriter, *http.Request)
	PutSubmodelDescriptorByIdThroughSuperpath(http.ResponseWriter, *http.Request)
	DeleteSubmodelDescriptorByIdThroughSuperpath(http.ResponseWriter, *http.Request)
}

// DescriptionAPIAPIRouter defines the required methods for binding the api requests to a responses for the DescriptionAPIAPI
// The DescriptionAPIAPIRouter implementation should parse necessary information from the http request,
// pass the data to a DescriptionAPIAPIServicer to perform the required actions, then write the service results to the http response.
type DescriptionAPIAPIRouter interface {
	GetSelfDescription(http.ResponseWriter, *http.Request)
}

// AssetAdministrationShellRegistryAPIAPIServicer defines the api actions for the AssetAdministrationShellRegistryAPIAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type AssetAdministrationShellRegistryAPIAPIServicer interface {
	GetAllAssetAdministrationShellDescriptors(context.Context, int32, string, model.AssetKind, string) (model.ImplResponse, error)
	PostAssetAdministrationShellDescriptor(context.Context, model.AssetAdministrationShellDescriptor) (model.ImplResponse, error)
	GetAssetAdministrationShellDescriptorById(context.Context, string) (model.ImplResponse, error)
	PutAssetAdministrationShellDescriptorById(context.Context, string, model.AssetAdministrationShellDescriptor) (model.ImplResponse, error)
	DeleteAssetAdministrationShellDescriptorById(context.Context, string) (model.ImplResponse, error)
	GetAllSubmodelDescriptorsThroughSuperpath(context.Context, string, int32, string) (model.ImplResponse, error)
	PostSubmodelDescriptorThroughSuperpath(context.Context, string, model.SubmodelDescriptor) (model.ImplResponse, error)
	GetSubmodelDescriptorByIdThroughSuperpath(context.Context, string, string) (model.ImplResponse, error)
	PutSubmodelDescriptorByIdThroughSuperpath(context.Context, string, string, model.SubmodelDescriptor) (model.ImplResponse, error)
	DeleteSubmodelDescriptorByIdThroughSuperpath(context.Context, string, string) (model.ImplResponse, error)
}

// DescriptionAPIAPIServicer defines the api actions for the DescriptionAPIAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type DescriptionAPIAPIServicer interface {
	GetSelfDescription(context.Context) (model.ImplResponse, error)
}
